# 6. *Реализовать структуру данных «Товары». Она должна представлять собой список кортежей.
# Каждый кортеж хранит информацию об отдельном товаре.
# В кортеже должно быть два элемента — номер товара и словарь с параметрами
# (характеристиками товара: название, цена, количество, единица измерения).
# Структуру нужно сформировать программно, т.е. запрашивать все данные у пользователя.
#
# Пример готовой структуры:
#
# [
#     (1, {"название": "компьютер", "цена": 20000, "количество": 5, "eд": "шт."}),
#     (2, {"название": "принтер", "цена": 6000, "количество": 2, "eд": "шт."}),
#     (3, {"название": "сканер", "цена": 2000, "количество": 7, "eд": "шт."})
# ]
# Необходимо собрать аналитику о товарах. Реализовать словарь, в котором каждый ключ — характеристика товара,
# например название, а значение — список значений-характеристик, например список названий товаров.
#
# Пример:
#
# {
# "название": ["компьютер", "принтер", "сканер"],
# "цена": [20000, 6000, 2000],
# "количество": [5, 2, 7],
# "ед": ["шт."]
# }
data = []
size = int(input("Введите количество товаров"))
for i in range(size):
    article = int(input("Введите артикль"))
    size_dict = int(input("Введите количество [характеристик]"))
    spec = {}
    for j in range(size_dict):
        name = input("Введите характеристику")
        chart = input("Введите значение")
        spec[name] = chart
    product_info = (article, spec)
    data.append(product_info)
print(dict)

#data = [
 #    (1, {"название": "компьютер", "цена": 20000, "количество": 5, "eд": "шт."}),
 #    (2, {"название": "принтер", "цена": 6000, "количество": 2, "eд": "шт."}),
 #    (3, {"название": "сканер", "цена": 2000, "количество": 7, "eд": "шт."})
 #]

# {"название": "компьютер", "цена": 20000, "количество": 5, "eд": "шт."}

result = {}
for product_info in data:
    spec = product_info[1]
    for key, value in spec.items():
        lst = result.get(key)
        if lst == None:
            lst = [value]
            result[key] = lst
        else:
            lst.append(value)
print(result)
